local Colyseus = require "colyseus.client"

-- SERVER VARS
local server_address = "localhost"
local server_port = "3553"

-- Vars
local client
local max_clients = 4
local room
local delay = 0
local delay_time = 0

-- player score
local score = 0
local score = score -- What does this do?

local time_os = os.clock()
local timetaken_os = 0


-- scores given out
local firstplace = 10
local secondplace = 5
local badreaction = 10

local goodbad = 0
local goodbad = goodbad -- What does this do?

local centerposition;

local goodisactive = false
local badisactive = true

local badoldpos
local goodoldpos

local pickactive

local playerid = {""} 
local it = 0
local it = it
function init(self)

	msg.post(".", "acquire_input_focus")

	client = Colyseus.new("ws://" .. server_address .. ":" .. server_port, false) -- false: not to connect immediately

	client:join_or_create("reactiongame", function(err, room_instance)
		if (err ~= nil) then
			print("JOIN ERROR: " .. err)
			return
		end

		-- assign room instance to global "room" variable
		room = room_instance

		
		-- listen to room state change from the room handler
		-- user this method to syncronize the room state from
		print("PLAYERS:")
		pprint(room.state.players)
		pprint(room.state.messages)
		print("successfully joined '" .. room.name .. "'")

		-- room.state.messages['on_add'] = function(msg, sessionId)
		-- 	print("message arrived", msg.message)
		-- end

		room.state.players.on_add = function(player, sessionId)
			print("new player")
			pprint(player)
			playerid[it] = sessionId
			it = it + 1
		end

		room.state.on_change = function(changes)
			print("state changes")
			pickactive = room.state.mode
			Setactives()
			Setpositions()
		end

		room:on_message("data", function(message)
			print("colyseus-defold: 'data' message received =>")
			pprint(message)
		end)

		room:on("leave", function()
			print("left '" .. room.name .. "'")
		end)
	end);
	
	msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })
	centerposition = go.get_position("wait")
	goodoldpos = go.get_position("good")
	badoldpos = go.get_position("bad")

	msg.post("/bad#Bad", "disable")
	msg.post("/good#Good", "disable")
	msg.post("/wait#Wait", "disable")
	
end

function update(self, dt)
	client:loop()
	--print("ID")
	--print(room.sessionId)
	--print("clients")
	--print(room.state.players)
	
	-- time = time + dt using os.clock() instead of dt
	-- Whatsactive()
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		if os.clock() > delay_time + delay then
			Settimetaken()
			
			-- print(badisactive)
		end
	end
end

function Settimetaken()
	-- timetaken = time
	timetaken_os = math.floor(1000*(os.clock() - time_os))
	time_os = os.clock()

	if room~=nil then
		if room.state.mode == 1 then
		room:send("time", {time_taken = timetaken_os})
		elseif room.state.mode == 2 then
			delay = 2
		end
		delay = delay + 1
		delay_time = os.clock()
	else
		print("ROOM ERROR: Room is nil")
	end
	-- print(timetaken)
	print(timetaken_os)
end

function Plusscore()
	-- add real score
	if	goodisactive == true then
		
		--score = score + 1

		print("Curren points are")
		print(room.state.players[room.sessionId].points)

	if room.state.players[room.sessionId].points > 2 then

		
		msg.post("/Air-head#bloon", "play_animation", {id = hash("First")})
		
	elseif room.state.players[room.sessionId].points > 5 then

		
		msg.post("/Air-head#bloon", "play_animation", {id = hash("Second")})
		
	elseif room.state.players[room.sessionId].points > 8 then

		
		msg.post("/Air-head#bloon", "play_animation", {id = hash("Third")})
		
	end

end
if badisactive == true then 

	--score = score - 1
	if room.state.players[room.sessionId ].points < 3 then

		
		msg.post("/Air-head#bloon", "play_animation", {id = hash("Firstback")})

	elseif room.state.players[ room.sessionId ].points < 6 and room.state.players[ room.sessionId ].points > 3  then
		
		msg.post("/Air-head#bloon", "play_animation", {id = hash("Secondback")})
	end
end

end

function Setactives ()
	if pickactive == 1 then
		goodisactive = true
		badisactive = false
		print("good is active")
		msg.post("/good#Good", "enable")
		msg.post("/wait#Wait", "disable")
		msg.post("/bad#Bad", "disable")
		time_os = os.clock()
	end

	if pickactive == 2 then
		badisactive = true
		goodisactive = false
		print("bad is active")
		msg.post("/bad#Bad", "enable")
		msg.post("/wait#Wait", "disable")
		msg.post("/good#Good", "disable")
	end

	if pickactive == 0 then
		badisactive = false
		goodisactive = false
		print("Neutral is active")
		msg.post("/wait#Wait", "enable")
		msg.post("/good#Good", "disable")
		msg.post("/bad#Bad", "disable")
		Plusscore()
		otherscores()
	end


end
function otherscores()


	for i = 0,3 do

			if room.state.players[playerid[i]].points == 0 then

				if playerid[0] == playerid[i] then
					msg.post("/Scoore player one#score", "play_animation", {id = hash("score_indicator_1")})
				elseif playerid[1] == playerid[i] then
					msg.post("/Scoore player one1#score", "play_animation", {id = hash("score_indicator_1")})
				elseif playerid[2] == playerid[i] then
					msg.post("/Scoore player one2#score", "play_animation", {id = hash("score_indicator_1")})
				elseif playerid[3] == playerid[i] then
					msg.post("/Scoore player one3#score", "play_animation", {id = hash("score_indicator_1")})
				end
				--Zerobothscoores() 
			elseif room.state.players[playerid[i]].points == 1 then

				if playerid[0] == playerid[i]  then
					msg.post("/Scoore player one#score", "play_animation", {id = hash("score_indicator_2")})
				elseif playerid[1] == playerid[i] then
					msg.post("/Scoore player one1#score", "play_animation", {id = hash("score_indicator_2")})
				elseif playerid[2] == playerid[i] then
					msg.post("/Scoore player one2#score", "play_animation", {id = hash("score_indicator_2")})
				elseif playerid[3] == playerid[i] then
					msg.post("/Scoore player one3#score", "play_animation", {id = hash("score_indicator_2")})
				end 
				Zerobothscoores()
			elseif room.state.players[playerid[i]].points == 2 then

				if playerid[0] == playerid[i] then
					msg.post("/Scoore player one#score", "play_animation", {id = hash("score_indicator_3")})
				elseif playerid[1] == playerid[i] then
					msg.post("/Scoore player one1#score", "play_animation", {id = hash("score_indicator_3")})
				elseif playerid[2] == playerid[i] then
					msg.post("/Scoore player one2#score", "play_animation", {id = hash("score_indicator_3")})
				elseif playerid[3] == playerid[i] then
					msg.post("/Scoore player one3#score", "play_animation", {id = hash("score_indicator_3")})
				end
				Zerobothscoores()
			elseif room.state.players[playerid[i]].points == 3 then

				if playerid[0] == playerid[i] then
					msg.post("/Scoore player one#score", "play_animation", {id = hash("score_indicator_4")})
				elseif playerid[1] == playerid[i] then
					msg.post("/Scoore player one1#score", "play_animation", {id = hash("score_indicator_4")})
				elseif playerid[2] == playerid[i] then
					msg.post("/Scoore player one2#score", "play_animation", {id = hash("score_indicator_4")})
				elseif playerid[3] == playerid[i] then
					msg.post("/Scoore player one3#score", "play_animation", {id = hash("score_indicator_4")})
				end

-- keep other scoores lower at zero 
Zerobothscoores()
	
			elseif room.state.players[playerid[i]].points == 4 then

				if playerid[0] == playerid[i] then
					msg.post("/Scoore player one#score1", "play_animation", {id = hash("score_indicator_2")})
				elseif playerid[1] == playerid[i] then
					msg.post("/Scoore player one1#score1", "play_animation", {id = hash("score_indicator_2")})
				elseif playerid[2] == playerid[i] then
					msg.post("/Scoore player one2#score1", "play_animation", {id = hash("score_indicator_2")})
				elseif playerid[3] == playerid[i] then
					msg.post("/Scoore player one3#score1", "play_animation", {id = hash("score_indicator_2")})
				end

				Onezero()
				
			elseif room.state.players[playerid[i]].points == 5 then

				if playerid[0] == playerid[i] then
					msg.post("/Scoore player one#score1", "play_animation", {id = hash("score_indicator_3")})
				elseif playerid[1] == playerid[i] then
					msg.post("/Scoore player one1#score1", "play_animation", {id = hash("score_indicator_3")})
				elseif playerid[2] == playerid[i] then
					msg.post("/Scoore player one2#score1", "play_animation", {id = hash("score_indicator_3")})
				elseif playerid[3] == playerid[i] then
					msg.post("/Scoore player one3#score1", "play_animation", {id = hash("score_indicator_3")})
				end

				Onezero()
				
			elseif room.state.players[playerid[i]].points == 6 then

				if playerid[0] == playerid[i] then
					msg.post("/Scoore player one#score1", "play_animation", {id = hash("score_indicator_4")})
				elseif playerid[1] == playerid[i] then
					msg.post("/Scoore player one1#score1", "play_animation", {id = hash("score_indicator_4")})
				elseif playerid[2] == playerid[i] then
					msg.post("/Scoore player one2#score1", "play_animation", {id = hash("score_indicator_4")})
				elseif playerid[3] == playerid[i] then
					msg.post("/Scoore player one3#score1", "play_animation", {id = hash("score_indicator_4")})
				end

				Onezero()

				
			elseif room.state.players[playerid[i]].points == 7 then

				if playerid[0] == playerid[i] then
					msg.post("/Scoore player one#score2", "play_animation", {id = hash("score_indicator_2")})
				elseif playerid[1] == playerid[i] then
					msg.post("/Scoore player one1#score2", "play_animation", {id = hash("score_indicator_2")})
				elseif playerid[2] == playerid[i] then
					msg.post("/Scoore player one2#score2", "play_animation", {id = hash("score_indicator_2")})
				elseif playerid[3] == playerid[i] then
					msg.post("/Scoore player one3#score2", "play_animation", {id = hash("score_indicator_2")})
				end

				
			elseif room.state.players[playerid[i]].points == 8 then

				if playerid[0] == playerid[i] then
					msg.post("/Scoore player one#score2", "play_animation", {id = hash("score_indicator_3")})
				elseif playerid[1] == playerid[i] then
					msg.post("/Scoore player one1#score2", "play_animation", {id = hash("score_indicator_3")})
				elseif playerid[2] == playerid[i] then
					msg.post("/Scoore player one2#score2", "play_animation", {id = hash("score_indicator_3")})
				elseif playerid[3] == playerid[i] then
					msg.post("/Scoore player one3#score2", "play_animation", {id = hash("score_indicator_3")})
				end
				
			elseif room.state.players[playerid[i]].points == 9 then

				if playerid[0] == playerid[i] then
					msg.post("/Scoore player one#score2", "play_animation", {id = hash("score_indicator_4")})
				elseif playerid[1] == playerid[i] then
					msg.post("/Scoore player one1#score2", "play_animation", {id = hash("score_indicator_4")})
				elseif playerid[2] == playerid[i] then
					msg.post("/Scoore player one2#score2", "play_animation", {id = hash("score_indicator_4")})
				elseif playerid[3] == playerid[i] then
					msg.post("/Scoore player one3#score2", "play_animation", {id = hash("score_indicator_4")})
				end
				
				
		end
	end


	

end
function Zerobothscoores()

	if playerid[0] then
		msg.post("/Scoore player one#score1", "play_animation", {id = hash("score_indicator_1")})
	elseif playerid[1] then
		msg.post("/Scoore player one1#score1", "play_animation", {id = hash("score_indicator_1")})
	elseif playerid[2] then
		msg.post("/Scoore player one2#score1", "play_animation", {id = hash("score_indicator_1")})
	else
		msg.post("/Scoore player one3#score1", "play_animation", {id = hash("score_indicator_1")})
	end 
		if playerid[0] then
			msg.post("/Scoore player one#score2", "play_animation", {id = hash("score_indicator_1")})
		elseif playerid[1] then
			msg.post("/Scoore player one1#score2", "play_animation", {id = hash("score_indicator_1")})
		elseif playerid[2] then
			msg.post("/Scoore player one2#score2", "play_animation", {id = hash("score_indicator_1")})
		else
			msg.post("/Scoore player one3#score2", "play_animation", {id = hash("score_indicator_1")})
		end

	
	end	

	function Onezero()

		if playerid[0] then
			msg.post("/Scoore player one#score2", "play_animation", {id = hash("score_indicator_1")})
		elseif playerid[1] then
			msg.post("/Scoore player one1#score2", "play_animation", {id = hash("score_indicator_1")})
		elseif playerid[2] then
			msg.post("/Scoore player one2#score2", "play_animation", {id = hash("score_indicator_1")})
		else
			msg.post("/Scoore player one3#score2", "play_animation", {id = hash("score_indicator_1")})
		end

	end